<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
	<flow name="listarplanes">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/planes/listar" doc:name="Endpoint listar planes" />
		<db:select config-ref="Oracle_Configuration" doc:name="Database">
			<db:parameterized-query><![CDATA[select ID_PLAN,
NOMBRE,
SMS,
PUSH,
MAIL,
VALOR_PLAN,
NUMERO_MSJ FROM PLAN]]></db:parameterized-query>
		</db:select>
		<dw:transform-message doc:name="Transform Message"
			metadata:id="459a17fe-412a-4eed-96c2-ca96bc2f2582">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map {
	idplan: $.ID_PLAN as :number,
	nombre: $.NOMBRE,
	numeromails: $.MAIL as :number,
	numeromsjs: $.NUMERO_MSJ as :number,
	numeropush: $.PUSH as :number,
	numerosms: $.SMS as :number,
	valorplan: $.VALOR_PLAN as :number
}]]></dw:set-payload>
		</dw:transform-message>
	</flow>

	<flow name="buscarplan">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/planes/buscar" doc:name="Endpoint para buscar planes" />
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
		<db:select config-ref="Oracle_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select ID_PLAN,
NOMBRE,
SMS,
PUSH,
MAIL,
VALOR_PLAN,
NUMERO_MSJ FROM PLAN WHERE ID_PLAN=#[payload.idplan]]]></db:parameterized-query>
		</db:select>
		<dw:transform-message doc:name="Transform Message"
			metadata:id="459a17fe-412a-4eed-96c2-ca96bc2f2582">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
 {
	idplan: payload[0].ID_PLAN as :number,
	nombre: payload[0].NOMBRE,
	numeromails: payload[0].MAIL as :number,
	numeromsjs: payload[0].NUMERO_MSJ as :number,
	numeropush: payload[0].PUSH as :number,
	numerosms: payload[0].SMS as :number,
	valorplan: payload[0].VALOR_PLAN as :number
}]]></dw:set-payload>
		</dw:transform-message>
	</flow>

	<flow name="editarplan">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/planes/editar" doc:name="endpointeditarplan" />
		<json:validate-schema schemaLocation="jsonplan.json"
			doc:name="Validar Estructura Plan" />
		<json:json-to-object-transformer
			doc:name="ConvertirJsonPlan" returnClass="java.util.HashMap" />
		<db:update config-ref="Oracle_Configuration" doc:name="editar plan BD">
			<db:parameterized-query><![CDATA[UPDATE PLAN SET 
NOMBRE=#[payload.nombre],
SMS=#[payload.numerosms],
PUSH=#[payload.numeropush],
MAIL=#[payload.numeromails],
VALOR_PLAN=#[payload.valorplan],
NUMERO_MSJ=#[payload.numeromsjs] WHERE ID_PLAN=#[payload.idplan]]]></db:parameterized-query>
		</db:update>
		<choice doc:name="Choice">
			<when expression="#[payload==1]">
				<dw:transform-message doc:name="respuesta correcta">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	COD:"00",
	MSJ:"Exito"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	COD:"-1",
	MSJ:"Error"
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>
		<choice-exception-strategy doc:name="Copy_of_Excepciones Capturadas">
			<catch-exception-strategy
				when="#[exception.causeMatches('*JsonSchemaValidationException')]"
				doc:name="Copy_of_Excepcion estructura JSON">
				<set-payload value="#[exception]" doc:name="Copy_of_Captura del mensaje" />
				<dw:transform-message doc:name="Copy_of_Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	respuesta:{
		codigo:-1,
		respuesta:'Error estructura json'
	}
}]]></dw:set-payload>
				</dw:transform-message>
			</catch-exception-strategy>
			<catch-exception-strategy
				when="#[exception.causedBy(org.mule.extension.validation.api.MultipleValidationException)]"
				doc:name="Copy_of_Excepcion en los validadores">
				<set-payload value="#[exception]" doc:name="Copy_of_Captura del mensaje" />
				<dw:transform-message doc:name="Copy_of_Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	respuesta:{
		codigo:-2,
		respuesta:payload.message
	}
}]]></dw:set-payload>
				</dw:transform-message>
			</catch-exception-strategy>
		</choice-exception-strategy>
	</flow>



	<flow name="crearplan">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/planes/crear" doc:name="endpointcrearplan" />
		<json:validate-schema schemaLocation="jsonplan.json"
			doc:name="Validar Estructura Plan" />
		<json:json-to-object-transformer
			doc:name="ConvertirJsonPlan" returnClass="java.util.HashMap" />
		<db:insert config-ref="Oracle_Configuration" doc:name="crear plan BD">
			<db:parameterized-query><![CDATA[INSERT INTO PLAN(NOMBRE,SMS,PUSH,MAIL,VALOR_PLAN,NUMERO_MSJ,ID_PLAN) 
            VALUES(#[payload.nombre],#[payload.numerosms],#[payload.numeropush],#[payload.numeromails],
            #[payload.valorplan],#[payload.numeromsjs],#[payload.idplan])]]></db:parameterized-query>
		</db:insert>

		<choice doc:name="Choice">
			<when expression="#[payload==1]">
				<dw:transform-message doc:name="respuesta correcta">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	COD:"00",
	MSJ:"Exito"
}]]></dw:set-payload>
				</dw:transform-message>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	COD:"-1",
	MSJ:"Error"
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>
		<choice-exception-strategy doc:name="Copy_of_Copy_of_Excepciones Capturadas">
			<catch-exception-strategy
				when="#[exception.causeMatches('*JsonSchemaValidationException')]"
				doc:name="Copy_of_Copy_of_Excepcion estructura JSON">
				<set-payload value="#[exception]" doc:name="Copy_of_Copy_of_Captura del mensaje" />
				<dw:transform-message doc:name="Copy_of_Copy_of_Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	respuesta:{
		codigo:-1,
		respuesta:'Error estructura json'
	}
}]]></dw:set-payload>
				</dw:transform-message>
			</catch-exception-strategy>
			<catch-exception-strategy
				when="#[exception.causedBy(org.mule.extension.validation.api.MultipleValidationException)]"
				doc:name="Copy_of_Copy_of_Excepcion en los validadores">
				<set-payload value="#[exception]" doc:name="Copy_of_Copy_of_Captura del mensaje" />
				<dw:transform-message doc:name="Copy_of_Copy_of_Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	respuesta:{
		codigo:-2,
		respuesta:payload.message
	}
}]]></dw:set-payload>
				</dw:transform-message>
			</catch-exception-strategy>
		</choice-exception-strategy>
	</flow>
</mule>
