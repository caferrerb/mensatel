<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <flow name="procedimientopagoservicioFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/procedimientos/pagoservicio" allowedMethods="POST" doc:name="Endpoint pago servicio suplementario"/>
        <json:validate-schema schemaLocation="jsonPagoservicio.json" doc:name="Validacion esquema JSON"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" encoding="UTF-8" doc:name="JSON a Objeto"/>
        <validation:all doc:name="Validacion de campos">
            <validation:validations>
                <validation:is-not-empty value="#[payload.Pagoservicio.fechaex]" message="#['La fecha es incorrecta']"/>
                <validation:is-number value="#[payload.Pagoservicio.codigoseguridad]" numberType="INTEGER" message="#['El codigo de seguridad es incorrecto']"/>
                <validation:is-number value="#[payload.Pagoservicio.numTarjeta]" numberType="LONG" message="#['El numero de la tarjeta es invalido']"/>
                <validation:is-number value="#[payload.Pagoservicio.idservicio]" numberType="INTEGER" message="#['El id del servicio es invalido']"/>
                <validation:matches-regex value="#[payload.Pagoservicio.numero]" regex="[0-9]{10}" message="#['El numero del abonado es invalido']"/>
            </validation:validations>
        </validation:all>
        <set-variable variableName="pago" value="#[payload.Pagoservicio]" encoding="UTF-8" doc:name="Variable"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	Costoservicio:{
		idservicio:flowVars.pago.idservicio
	}	
}]]></dw:set-payload>
        </dw:transform-message>
        <http:request config-ref="HTTP_Request_Configuration" path="/consultas/valorservicio" method="POST" host="localhost" port="8081" doc:name="Consumo valor servicio"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" encoding="UTF-8" doc:name="JSON a Objeto"/>
        <choice doc:name="Choice">
            <when expression="#[payload.codigo.equalsIgnoreCase('-1')]">
                <dw:transform-message doc:name="Respuesta">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	codigo:"-1",
	mensaje:"El servicio no se encuentra registrado"
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <set-variable variableName="valor" value="#[payload.valor]" doc:name="Variable valor"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	Agregarservicio:{
		numeroabonado:flowVars.pago.numero,
		codigoservicio:flowVars.pago.idservicio
	}
}]]></dw:set-payload>
                </dw:transform-message>
                <http:request config-ref="HTTP_Request_Configuration" path="/procedimientos/agregarservicio" method="POST" host="localhost" port="8081" doc:name="Consumo agregar servicio"/>
                <json:json-to-object-transformer returnClass="java.util.HashMap" encoding="UTF-8" doc:name="JSON to Object"/>
                <choice doc:name="Choice">
                    <when expression="#[payload.codigo.equalsIgnoreCase('-3')]">
                        <dw:transform-message doc:name="Respuesta">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	codigo:"-1",
	respuesta:"El servicio ya se encuentra contratado"
}]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <when expression="#[payload.codigo.equalsIgnoreCase('COD-0001')]">
                        <dw:transform-message doc:name="Respuesta">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	codigo:"-2",
	respuesta:"El abonado no existe"
}]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	PagarPasarela:{
		numeroabonado:flowVars.pago.numero,
		numtarjeta:flowVars.pago.numTarjeta,
		codigoseguridad:flowVars.pago.codigoseguridad,
		fechaexpiracion:flowVars.pago.fechaex,
		valor:"$(flowVars.valor)",
		descripcion:"Pago servicio $(flowVars.pago.idservicio)"
	}
}]]></dw:set-payload>
                        </dw:transform-message>
                        <http:request config-ref="HTTP_Request_Configuration" path="/pasareladepago" method="POST" host="localhost" port="8081" doc:name="Consumo pasarela de pago"/>
                        <json:json-to-object-transformer returnClass="java.util.HashMap" encoding="UTF-8" doc:name="JSON to Object"/>
                        <choice doc:name="Choice">
                            <when expression="#[payload.codigo.equalsIgnoreCase('-1')]">
                                <dw:transform-message doc:name="Respuesta">
                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	codigo:"-1",
	respuesta:"El abonado no esta registrado"
}]]></dw:set-payload>
                                </dw:transform-message>
                            </when>
                            <otherwise>
                                <set-variable variableName="pasarela" value="#[payload]" doc:name="Variable pasarela"/>
                                <choice doc:name="Choice">
                                    <when expression="#[flowVars.pasarela.state.equalsIgnoreCase('DECLINED')||flowVars.pasarela.state.equalsIgnoreCase('ERROR')]">
                                        <dw:transform-message doc:name="Respuesta">
                                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	codigo:"-1",
	respuesta:"El pago fue rechazado, verifique su tarjeta"
}]]></dw:set-payload>
                                        </dw:transform-message>
                                    </when>
                                    <otherwise>
                                        <db:stored-procedure config-ref="Oracle_Configuration" doc:name="Database">
                                            <db:parameterized-query><![CDATA[{call PAGAR_SERVICIO_SUMPLEMENTARIO(:P_ID_SERVICIO,
									:P_ABONADO,
									:P_TARJETA,
									:P_IDTX,
									:P_COD,
									:P_MSJ)}]]></db:parameterized-query>
                                            <db:in-param name="P_ID_SERVICIO" type="NUMERIC" value="#[flowVars.pago.idservicio]"/>
                                            <db:in-param name="P_ABONADO" type="NUMERIC" value="#[flowVars.pago.numero]"/>
                                            <db:in-param name="P_TARJETA" type="VARCHAR" value="#[flowVars.pago.numTarjeta]"/>
                                            <db:in-param name="P_IDTX" type="VARCHAR" value="#[flowVars.pasarela.transactionid]"/>
                                            <db:out-param name="P_COD" type="VARCHAR"/>
                                            <db:out-param name="P_MSJ" type="VARCHAR"/>
                                        </db:stored-procedure>
                                        <json:object-to-json-transformer doc:name="Object to JSON"/>
                                    </otherwise>
                                </choice>
                            </otherwise>
                        </choice>
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
        <choice-exception-strategy doc:name="Excepciones Capturadas">
            <catch-exception-strategy when="#[exception.causeMatches('*JsonSchemaValidationException')]" doc:name="Excepcion estructura JSON">
                <set-payload value="#[exception]" doc:name="Captura del mensaje"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	respuesta:{
		codigo:-1,
		respuesta:'Error estructura json'
	}
}]]></dw:set-payload>
                </dw:transform-message>
            </catch-exception-strategy>
            <catch-exception-strategy when="#[exception.causedBy(org.mule.extension.validation.api.MultipleValidationException)]" doc:name="Excepcion en los validadores">
                <set-payload value="#[exception]" doc:name="Captura del mensaje"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	respuesta:{
		codigo:-2,
		respuesta:payload.message
	}
}]]></dw:set-payload>
                </dw:transform-message>
            </catch-exception-strategy>
        </choice-exception-strategy>
    </flow>
</mule>
